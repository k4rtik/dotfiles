[alias]
  st = status
  ci = commit
  br = branch
  co = checkout
  df = diff
  dc = diff --cached
  hist = log -p
  who = shortlog -s --
  lc = log ORIG_HEAD.. --stat --no-merges
  llog = log --date=local
  changes = diff --name-status -r
  diffstat = diff --stat -r
  # Show verbose output about tags, branches or remotes
  tags = tag -l
  branches = branch -a
  remotes = remote -v
  # Pretty log output
  lg = log --graph --pretty=format:'%Cred%h%Creset %s%C(yellow)%d%Creset %Cgreen(%cr)%Creset [%an]' --abbrev-commit --date=relative
  alias = config --get-regexp ^alias\\.

[color]
  # Use colors in Git commands that are capable of colored output when outputting to the terminal
  ui = auto
[color "branch"]
  current = yellow reverse
  local = yellow
  remote = green
[color "diff"]
  meta = yellow bold
  frag = magenta bold # line info
  old = red bold # deletions
  new = green # additions
[color "status"]
  added = yellow
  changed = green
  untracked = cyan

# Use `origin` as the default remote on the `master` branch in all cases
[branch "master"]
  remote = origin
  merge = refs/heads/master

[user]
	name = Kartik Singhal
	email = kartik.singhal@hpe.com

[push]
	default = simple
[filter "media"]
	required = true
	clean = git media clean %f
	smudge = git media smudge %f
[core]
	excludesfile = /home/kartik/.gitignore_global
	editor = vim
[filter "lfs"]
	clean = git lfs clean %f
	smudge = git lfs smudge %f
	required = true
#[init]
#	templatedir = ~/.git_template
[merge]
	conflictstyle = diff3
	tool = meld

[credential]
	helper = cache --timeout=3600
